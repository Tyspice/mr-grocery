{"version":3,"sources":["components/dashboard/dashboardNav.js","containers/oneTimeItemsNav.js","containers/oneTimeItemsTable.js","containers/houseStaplesNav.js","containers/houseStaplesTable.js","containers/jkttStaplesNav.js","containers/jkttStaplesTable.js","components/dashboard/dashboardHeroBanner.js","containers/dashboardContainer.js","components/mobile/mobileHeroBanner.js","components/mobile/shoppingListItem.js","components/mobile/shoppingCategory.js","containers/mobileShoppingContainer.js","components/mobile/auditListItem.js","components/mobile/auditCategory.js","containers/mobileAuditContainer.js","components/mobile/mobileNav.js","containers/mobileContainer.js","containers/App.js","index.js","img/mr-grocery.png"],"names":["DashboardNav","props","Nav","variant","fill","Item","to","Link","OneTimeItemsNav","state","item","notes","category","house","staple","handleChange","bind","handleSubmit","e","target","id","this","setState","value","preventDefault","axios","method","url","process","data","response","handleAddItemUI","newItem","console","log","Navbar","expand","className","Toggle","aria-controls","Collapse","Form","onSubmit","Group","FormControl","onChange","type","placeholder","Button","onClick","handleDeleteSelected","React","Component","OneTimeItemsTable","selected","handleCellEdit","handleSelect","updatedItem","handleUpdateUI","length","handleDeleteUI","JSON","parse","config","isSelect","array","index","indexOf","splice","oneTimeItems","allItems","staples","categories","Object","keys","_","groupBy","map","label","columns","dataField","text","sort","editor","Type","SELECT","options","selectRow","mode","bgColor","hideSelectColumn","clickToSelect","clickToEdit","onSelect","row","rowIndex","_id","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","column","Container","keyField","striped","hover","condensed","HouseStaplesNav","inventoryStatus","Control","as","HouseStaplesTable","items","houseItems","true","editable","JKTTStaplesNav","JKTTStaplesTable","false","DashboardHeroBanner","styles","marginTop","backgroundImage","groceryMan","backgroundSize","backgroundColor","backgroundPosition","backgroundRepeat","Jumbotron","style","DashboardContainer","Fragment","path","from","MobileHeroBanner","height","ShoppingListItem","handleClick","checkbox","checked","container","display","alignItems","margin","itemNotesContainer","padding","itemContainer","fontSize","color","indicator","itemColor","background","width","ShoppingCategory","Card","Header","key","uuidv4","MobileShoppingContainer","checkedStaples","checkedOneTimeItems","handleClickUI","findIndex","toDelete","toUpdate","handleBulkStatusUpdateUI","out","low","couldGetMore","categorizedData","fluid","AuditListItem","newStatus","handleNewStatus","justifyContent","ToggleButtonGroup","name","size","defaultValue","ToggleButton","AuditCategory","MobileAuditContainer","MobileNav","marginBottom","bg","Brand","checkedSwitch","onlabel","offlabel","onstyle","offstyle","handleSwitch","MobileContainer","mobileSwitch","handleMobileSwitch","renderRedirect","handleShoppingClickUI","App","get","object","staplesArray","forEach","deleted","query","matches","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fa0f90bc.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\nconst DashboardNav = (props) => {\n    return (\n        <Nav variant=\"tabs\" fill>\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/house-staples\">\n                    <Nav.Link>House Staples</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/jktt-staples\">\n                    <Nav.Link>JKTT Staples</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/one-time-items\">\n                    <Nav.Link>One Time Items</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n        </Nav>\n    );\n}\n\nexport default DashboardNav;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass OneTimeItemsNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: false\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_ONETIMEITEMS,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: false\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Item\n                        </Button>\n                        <Button\n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default OneTimeItemsNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport OneTimeItemsNav from './oneTimeItemsNav';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\n\nclass OneTimeItemsTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data, false));\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n\n        const oneTimeItems = this.props.data.oneTimeItems;\n        const allItems = [...this.props.data.oneTimeItems, ...this.props.data.staples];\n        const ranges = Object.keys(_.groupBy(allItems, 'category'));\n\n        const categories = ranges.map(category => {\n            return { value: category, label: category }\n        });\n\n        const columns = [{\n            dataField: 'item',\n            text: 'Item',\n            sort: true\n        }, {\n            dataField: 'notes',\n            text: 'Notes',\n            sort: true\n        }, {\n            dataField: 'category',\n            text: 'Category',\n            sort: true,\n            editor: {\n                type: Type.SELECT,\n                options: categories\n            }\n        }];\n\n        const selectRow = {\n            mode: 'checkbox',\n            bgColor: 'tomato',\n            hideSelectColumn: true,\n            clickToSelect: true,\n            clickToEdit: true,\n            onSelect: (row,isSelect, rowIndex, e) => {\n                this.handleSelect(row._id, isSelect);\n            }\n            \n        };\n\n        const cellEdit = cellEditFactory({\n            mode: 'dbclick', \n            blurToSave: true,\n            afterSaveCell: (oldValue, newValue, row, column) => {\n                this.handleCellEdit({\n                    _id: row._id,\n                    [column.dataField]: newValue\n                });\n            }\n        });\n\n        return (\n            <Container>\n                <OneTimeItemsNav \n                handleDeleteSelected={ this.handleDeleteSelected }\n                handleAddItemUI={ this.props.handleAddItemUI }\n                />\n                <BootstrapTable \n                keyField='_id'\n                data={ oneTimeItems }\n                columns={ columns }\n                selectRow={ selectRow }\n                cellEdit={ cellEdit }\n                striped\n                hover\n                condensed\n                />\n            </Container>\n        );\n    }\n}\n\nexport default OneTimeItemsTable;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass HouseStaplesNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: true,\n            staple: true\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"status\") {\n            this.setState({ inventoryStatus: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_STAPLES,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: true,\n            staple: true\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Form.Control\n                        value={ this.state.inventoryStatus } \n                        onChange={ this.handleChange }\n                        id=\"status\"  \n                        as=\"select\"\n                        placeholder=\"Inventory Status\"\n                        className=\"mr-sm-2\"\n                        >\n                            <option>Well Stocked</option>\n                            <option>Could Get More</option>\n                            <option>Low</option>\n                            <option>Out</option>\n                        </Form.Control>\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Staple\n                        </Button>\n                        <Button \n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default HouseStaplesNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\nimport HouseStaplesNav from './houseStaplesNav';\n\nclass HouseStaplesTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), true);\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n        const items = this.props.data.staples;\n        const groupedItems = _.groupBy(items, 'house');\n        let houseItems = groupedItems.true;\n\n        //will only render if houseItems is defined\n        if(houseItems) {\n            const ranges = Object.keys(_.groupBy(houseItems, 'category'));\n            const categories = ranges.map(category => {\n                return { value: category, label: category }\n            });\n\n            const inventoryStatusRanges = [{\n                value: 'Well Stocked', \n                label: 'Well Stocked'\n            }, {\n                value: 'Could Get More',\n                label: 'Could Get More'\n            }, {\n                value: 'Low',\n                label: 'Low'\n            }, {\n                value: 'Out',\n                label: 'Out'\n            }];\n\n            const columns = [{\n                dataField: 'item',\n                text: 'Item',\n                sort: true\n            }, {\n                dataField: 'inventoryStatus',\n                text: 'Inventory Status',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: inventoryStatusRanges\n                }\n            }, {\n                dataField: 'updated',\n                text: 'Last Updated',\n                editable: false,\n                sort: true\n            }, {\n                dataField: 'notes',\n                text: 'Notes',\n                sort: true\n            }, {\n                dataField: 'category',\n                text: 'Category',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: categories\n                }\n            }];\n\n            const selectRow = {\n                mode: 'checkbox',\n                bgColor: 'tomato',\n                hideSelectColumn: true,\n                clickToSelect: true,\n                clickToEdit: true,\n                onSelect: (row,isSelect, rowIndex, e) => {\n                    this.handleSelect(row._id, isSelect);\n                }\n                \n            };\n\n            const cellEdit = cellEditFactory({\n                mode: 'dbclick', \n                blurToSave: true,\n                afterSaveCell: (oldValue, newValue, row, column) => {\n                    this.handleCellEdit({\n                        _id: row._id,\n                        [column.dataField]: newValue\n                    });\n                }\n            });\n        \n\n            return (\n                <Container>\n                    <HouseStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                    <BootstrapTable \n                    keyField='_id'\n                    data={ houseItems }\n                    columns={ columns }\n                    selectRow={ selectRow }\n                    cellEdit={ cellEdit }\n                    striped\n                    hover\n                    condensed\n                    />\n                </Container>\n            );\n\n        } else {\n            return (\n                <Container>\n                    <HouseStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                </Container>\n            );\n        }\n    }\n}\n\nexport default HouseStaplesTable;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass JKTTStaplesNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: true\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"status\") {\n            this.setState({ inventoryStatus: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_STAPLES,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: true\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Form.Control\n                        value={ this.state.inventoryStatus } \n                        onChange={ this.handleChange }\n                        id=\"status\"  \n                        as=\"select\"\n                        placeholder=\"Inventory Status\"\n                        className=\"mr-sm-2\"\n                        >\n                            <option>Well Stocked</option>\n                            <option>Could Get More</option>\n                            <option>Low</option>\n                            <option>Out</option>\n                        </Form.Control>\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Staple\n                        </Button>\n                        <Button \n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default JKTTStaplesNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\nimport JKTTStaplesNav from './jkttStaplesNav';\n\nclass JKTTStaplesTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), true);\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n        const items = this.props.data.staples;\n        const groupedItems = _.groupBy(items, 'house');\n        let houseItems = groupedItems.false;\n\n        //will only render if houseItems is defined\n        if(houseItems) {\n            const ranges = Object.keys(_.groupBy(houseItems, 'category'));\n            const categories = ranges.map(category => {\n                return { value: category, label: category }\n            });\n\n            const inventoryStatusRanges = [{\n                value: 'Well Stocked', \n                label: 'Well Stocked'\n            }, {\n                value: 'Could Get More',\n                label: 'Could Get More'\n            }, {\n                value: 'Low',\n                label: 'Low'\n            }, {\n                value: 'Out',\n                label: 'Out'\n            }];\n\n            const columns = [{\n                dataField: 'item',\n                text: 'Item',\n                sort: true\n            }, {\n                dataField: 'inventoryStatus',\n                text: 'Inventory Status',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: inventoryStatusRanges\n                }\n            }, {\n                dataField: 'updated',\n                text: 'Last Updated',\n                sort: true,\n                editable: false\n            }, {\n                dataField: 'notes',\n                text: 'Notes',\n                sort: true\n            }, {\n                dataField: 'category',\n                text: 'Category',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: categories\n                }\n            }];\n\n            const selectRow = {\n                mode: 'checkbox',\n                bgColor: 'tomato',\n                hideSelectColumn: true,\n                clickToSelect: true,\n                clickToEdit: true,\n                onSelect: (row,isSelect, rowIndex, e) => {\n                    this.handleSelect(row._id, isSelect);\n                }\n                \n            };\n\n            const cellEdit = cellEditFactory({\n                mode: 'dbclick', \n                blurToSave: true,\n                afterSaveCell: (oldValue, newValue, row, column) => {\n                    this.handleCellEdit({\n                        _id: row._id,\n                        [column.dataField]: newValue\n                    });\n                }\n            });\n        \n\n            return (\n                <Container>\n                    <JKTTStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                    <BootstrapTable \n                    keyField='_id'\n                    data={ houseItems }\n                    columns={ columns }\n                    selectRow={ selectRow }\n                    cellEdit={ cellEdit }\n                    striped\n                    hover\n                    condensed\n                    />\n                </Container>\n            );\n\n        } else {\n            return (\n                <Container>\n                    <JKTTStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                </Container>\n            );\n        }\n    }\n}\n\nexport default JKTTStaplesTable;","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport groceryMan from '../../img/mr-grocery.png';\n\nconst DashboardHeroBanner = (props) => {\n\n    const styles = {\n        marginTop: '20px',\n        backgroundImage: `url(${groceryMan})`,\n        backgroundSize: 'contain',\n        backgroundColor: 'white',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n\n    };\n\n    return (\n        <Jumbotron style={ styles } >\n            <h1>\n                Mr Grocery\n            </h1>\n            <p>\n                Welcome to Mr Grocery\n            </p>\n        </Jumbotron>\n    );\n}\n\nexport default DashboardHeroBanner;","import React from 'react';\nimport DashboardNav from '../components/dashboard/dashboardNav';\nimport OneTimeItemsTable from './oneTimeItemsTable';\nimport HouseStaplesTable from './houseStaplesTable';\nimport JKTTStaplesTable from './jkttStaplesTable';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport DashboardHeroBanner from '../components/dashboard/dashboardHeroBanner';\n\nclass DashboardContainer extends React.Component {\n    render() {\n        const data = this.props.data\n        return(\n            <React.Fragment>\n                <DashboardHeroBanner />\n                <DashboardNav />\n                <Switch>\n                    <Route path='/dashboard/house-staples'>\n                        <HouseStaplesTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI }\n                        />\n                    </Route>\n                    <Route path='/dashboard/jktt-staples'>\n                        <JKTTStaplesTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI } \n                        />\n                    </Route>\n                    <Route path='/dashboard/one-time-items'>\n                        <OneTimeItemsTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI } \n                        />\n                    </Route>\n                    <Redirect from='/dashboard' to='/dashboard/house-staples' />\n                 </Switch>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DashboardContainer;","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport groceryMan from '../../img/mr-grocery.png';\n\nconst MobileHeroBanner = (props) => {\n\n    const styles = {\n        marginTop: '20px',\n        height: '150px',\n        backgroundImage: `url(${groceryMan})`,\n        backgroundSize: 'contain',\n        backgroundColor: 'white',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n\n    };\n\n    return (\n    <Jumbotron \n    style={ styles } \n    />\n    );\n}\n\nexport default MobileHeroBanner;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { IoIosRadioButtonOff, IoIosRadioButtonOn } from 'react-icons/io'\n\nclass ShoppingListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.handleClick(this.props.item);\n    }\n\n    render() {\n        const checked = this.props.item.checked\n        let checkbox;\n\n        checked ? checkbox = <IoIosRadioButtonOn /> : checkbox = <IoIosRadioButtonOff />; \n\n        const background = (item) => {\n            let itemColor;\n            switch (item.inventoryStatus) {\n                case 'Well Stocked':\n                    itemColor = '#05c46b'\n                    break;\n                case 'Could Get More':\n                    itemColor = '#ffc048'\n                    break;\n                default:\n                    itemColor = '#ff5e57'\n                    break;\n            }\n            return itemColor;\n        }\n\n        const styles = {\n            container: {\n                display: \"inline-flex\", \n                alignItems: \"center\",\n                margin: \"0px 0px 5px 0px\",\n                backgroundColor: 'white'\n            },\n            itemNotesContainer: {\n                padding: \"10px 5px\"\n            },\n            itemContainer: {\n                display: 'flex',\n                alignItems: 'center'\n            },\n            notes: {\n                fontSize: \"75%\",\n                color: \"#485460\"\n            },\n            indicator: {\n                backgroundColor: background(this.props.item),\n                height: '2px',\n                width: '20px',\n                margin: '10px'\n            }\n        }\n        \n        return(\n        <Container onClick={ this.handleClick } style={ styles.container }>\n            { checkbox }\n            <div style={ styles.itemNotesContainer }>\n                <div style={ styles.itemContainer }>\n                    <div>{ this.props.item.item }</div>\n                    <div style={ styles.indicator } />\n                </div>\n                <div style={ styles.notes }>{ this.props.item.notes }</div>\n            </div>\n        </Container>\n        );\n    }\n\n}\n\nexport default ShoppingListItem;","import React from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport ShoppingListItem from './shoppingListItem';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ShoppingCategory = (props) => {\n\n    const items = props.items;\n\n    const styles = {\n        cardHeader: {\n            margin: \"0px 0px 5px 0px\"\n        }\n    };\n\n    return (\n        <Form>\n            <Card>\n                <Card.Header style={ styles.cardHeader }>{ props.category }</Card.Header>\n                {\n                items.map(item => {\n                    return(\n                        <ShoppingListItem\n                        item={ item }\n                        handleClick={ props.handleClick }\n                        key={ uuidv4() }\n                        />\n                    )\n                }) \n                }\n            </Card>\n        </Form>\n    );\n}\n\nexport default ShoppingCategory;","import React from 'react';\nimport ShoppingCategory from '../components/mobile/shoppingCategory';\nimport { Container, Button } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\nimport axios from 'axios';\n\n\nclass MobileShoppingContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedStaples: [],\n            checkedOneTimeItems: []\n        }\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleClick(item) {\n        this.props.handleClickUI(item);\n\n        if(item.staple) {\n\n            if (item.checked) {\n                this.setState({ checkedStaples: [...this.state.checkedStaples, {_id: item._id, inventoryStatus: 'Well Stocked'}] });\n            } else {\n                let checkedStaples = this.state.checkedStaples;\n                const index = _.findIndex(checkedStaples, e => {\n                    return e._id === item._id\n                });\n                checkedStaples.splice(index, 1);\n                this.setState({ checkedStaples })\n                \n            }\n\n        } else {\n\n            if (item.checked) {\n                this.setState({ checkedOneTimeItems: [...this.state.checkedOneTimeItems, item._id] });\n            } else {\n                let checkedOneTimeItems = this.state.checkedOneTimeItems;\n                const index = checkedOneTimeItems.indexOf(item._id);\n                if (index > -1) {\n                    checkedOneTimeItems.splice(index, 1);\n                    this.setState({ checkedOneTimeItems })\n                };\n                \n            }\n        }\n    }\n\n    async handleSubmit() {\n\n        const toDelete = this.state.checkedOneTimeItems;\n        const toUpdate = this.state.checkedStaples;\n        let response;\n\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: toDelete\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), false);\n                //reset component state\n                this.setState({checkedOneTimeItems: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        if (toUpdate.length > 0) {\n            try {\n                //updates the database\n                response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_BULKSTATUSUPDATE,\n                    data: toUpdate\n\n                });\n                //updates ui\n                this.props.handleBulkStatusUpdateUI(JSON.parse(response.config.data));\n\n                this.setState({checkedStaples: []})\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    \n\n    render() {\n        /**\n         * the following code filters out well stocked items\n         * so that only items needed at the store will show up\n         * in the shopping version of the mobile app\n         */\n\n        //sets up variables as empty arrays so they're still iterable before load.\n        let data = this.props.data.staples;\n        let out = [];\n        let low = [];\n        let couldGetMore = [];\n        //groups by inventory status and puts only desired statuses into an array.\n        data = _.groupBy(data, 'inventoryStatus');\n        if(data['Out']) out = data['Out'];\n        if(data['Low']) low = data['Low'];\n        if(data['Could Get More']) couldGetMore = data['Could Get More'];\n        data = [...out, ...low, ...couldGetMore, ...this.props.data.oneTimeItems];\n        //creates new object keyed out by category and an array of those categories.\n        const categorizedData = _.groupBy(data, 'category');\n        const categories = Object.keys(categorizedData);\n\n        const styles = {\n            updateButton: {\n                margin: \"0px 0px 10px 0px\"\n            }\n        };\n\n        return (\n            <Container fluid=\"sm\" >\n                <Button \n                style={ styles.updateButton } \n                onClick={ this.handleSubmit } \n                variant=\"success\"\n                >\n                    Update List\n                </Button>\n                {\n                    categories.map(category => {\n                        return (\n                        <ShoppingCategory \n                        category={ category }\n                        items={ categorizedData[category] }\n                        handleClick={ this.handleClick }\n                        key={ uuidv4() } \n                        />\n                        )\n                    })\n                }\n            </Container>\n        );\n    }\n}\n\nexport default MobileShoppingContainer;","import React from 'react';\nimport { Container, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\n\nclass AuditListItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(newStatus) {\n        let item = this.props.item;\n        item.inventoryStatus = newStatus\n\n        this.props.handleNewStatus(item);\n    }\n\n    render() {\n\n        const styles = {\n            container: {\n                display: \"flex\", \n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                margin: \"0px 0px 5px 0px\",\n                backgroundColor: 'white'\n            },\n            itemContainer: {\n                padding: \"10px 5px\"\n            },\n        }\n        \n        return(\n        <Container style={ styles.container }>\n            <div style={ styles.itemContainer }>{ this.props.item.item }</div>  \n            <ToggleButtonGroup \n            name=\"stock\" \n            type=\"radio\" \n            size=\"lg\" \n            defaultValue={ this.props.item.inventoryStatus }\n            onChange={ this.handleChange }\n            >\n                <ToggleButton value=\"Well Stocked\" variant=\"outline-success\"> </ToggleButton>\n                <ToggleButton value=\"Could Get More\" variant=\"outline-info\"> </ToggleButton>\n                <ToggleButton value=\"Low\" variant=\"outline-warning\"> </ToggleButton>\n                <ToggleButton value=\"Out\" variant=\"outline-danger\"> </ToggleButton>\n            </ToggleButtonGroup>\n        </Container>\n        );\n    }\n}\n\nexport default AuditListItem;","import React from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport AuditListItem from './auditListItem';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AuditCategory = (props) => {\n\n    const items = props.items;\n\n    const styles = {\n        cardHeader: {\n            margin: \"0px 0px 5px 0px\"\n        }\n    };\n\n    return (\n        <Form>\n            <Card>\n                <Card.Header style={ styles.cardHeader }>{ props.category }</Card.Header>\n                {\n                items.map(item => {\n                    return(\n                        <AuditListItem\n                        handleNewStatus={ props.handleNewStatus }\n                        item={ item }\n                        key={ uuidv4() }\n                        />\n                    )\n                }) \n                }\n            </Card>\n        </Form>\n    );\n}\n\nexport default AuditCategory;","import React from 'react';\nimport AuditCategory from '../components/mobile/auditCategory';\nimport { Container } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\nimport axios from 'axios';\n\n\nclass MobileAuditContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleNewStatus = this.handleNewStatus.bind(this);\n    }\n\n    async handleNewStatus(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        } \n    }\n\n    render() {\n\n        const data = this.props.data.staples;\n        const categorizedData = _.groupBy(data, 'category');\n        const categories = Object.keys(categorizedData);\n\n        return (\n            <Container fluid=\"sm\" >\n                {\n                    categories.map(category => {\n                        return (\n                        <AuditCategory \n                        category={ category }\n                        items={ categorizedData[category] }\n                        handleNewStatus={ this.handleNewStatus }\n                        key={ uuidv4() } \n                        />\n                        )\n                    })\n                }\n            </Container>\n        );\n    }\n}\n\nexport default MobileAuditContainer;","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\n\nclass MobileNav extends React.Component {\n\n    render() {\n\n        const styles = {\n            navbar: {\n                marginBottom: \"25px\",\n                justifyContent: \"space-between\"\n\n            }\n        };\n        return (\n            <Navbar\n            style={ styles.navbar }\n            variant=\"light\"\n            bg=\"light\" \n            >\n                <Navbar.Brand>Mr Grocery</Navbar.Brand>\n                <BootstrapSwitchButton\n                width={ 110 }\n                checked={ this.props.checkedSwitch }\n                onlabel=\"Shopping\"\n                offlabel=\"Audit\"\n                onstyle=\"success\"\n                offstyle=\"warning\"\n                onChange={ this.props.handleSwitch } \n                />\n            </Navbar>\n        );\n    }\n}\n\nexport default MobileNav;","import React from 'react';\nimport MobileHeroBanner from '../components/mobile/mobileHeroBanner';\nimport MobileShoppingContainer from './mobileShoppingContainer';\nimport MobileAuditContainer from './mobileAuditContainer';\nimport MobileNav from '../components/mobile/mobileNav';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nclass MobileContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mobileSwitch: true\n        }\n        \n        this.handleMobileSwitch = this.handleMobileSwitch.bind(this);\n        this.renderRedirect = this.renderRedirect.bind(this);\n    }\n\n    //Handles mobile switch button\n    handleMobileSwitch() {\n        this.setState({ mobileSwitch: !this.state.mobileSwitch })\n    }\n    //renders fredirect based on state \n    renderRedirect() {\n        if (this.state.mobileSwitch === true) {\n            return <Redirect to=\"/mobile/shopping\" />\n        } else {\n            return <Redirect to=\"/mobile/audit\" />\n        }\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <MobileHeroBanner />\n                <MobileNav \n                handleSwitch={ this.handleMobileSwitch }\n                checkedSwitch={ this.state.mobileSwitch } \n                />\n                <Switch>\n                    <Route path=\"/mobile/shopping\">\n                        <MobileShoppingContainer \n                        handleClickUI={ this.props.handleShoppingClickUI }\n                        handleDeleteUI={ this.props.handleDeleteUI }\n                        handleBulkStatusUpdateUI={ this.props.handleBulkStatusUpdateUI } \n                        data={ this.props.data }\n                        />\n                    </Route>\n                    <Route path=\"/mobile/audit\">\n                        <MobileAuditContainer\n                        data={ this.props.data }\n                        handleUpdateUI={ this.props.handleUpdateUI } \n                        />\n                    </Route>\n                </Switch>\n                { this.renderRedirect() }\n            </React.Fragment> \n        );\n    }\n}\n\nexport default MobileContainer;","import React from 'react';\nimport DashboardContainer from './dashboardContainer';\nimport MobileContainer from './mobileContainer';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Media from 'react-media';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from 'axios';\nimport _ from 'lodash';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      staples: [], \n      oneTimeItems: []\n    }\n\n    this.handleShoppingClickUI = this.handleShoppingClickUI.bind(this);\n    this.handleUpdateUI = this.handleUpdateUI.bind(this);\n    this.handleAddItemUI = this.handleAddItemUI.bind(this);\n    this.handleDeleteUI = this.handleDeleteUI.bind(this);\n    this.handleBulkStatusUpdateUI = this.handleBulkStatusUpdateUI.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n\n      //fetches data from the api on component mount\n      const staples = await axios.get(process.env.REACT_APP_API_STAPLES);\n      const oneTimeItems = await axios.get(process.env.REACT_APP_API_ONETIMEITEMS);\n      \n      //adds a checked parameter to each object\n      const checkedStaples = staples.data.map(object => {\n        return {...object, checked: false}\n      });\n      const checkedOneTimeItems = oneTimeItems.data.map(object => {\n        return {...object, checked: false}\n      });\n\n      this.setState({ staples: checkedStaples, oneTimeItems: checkedOneTimeItems });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /******************************************************************\n   * All of these functions update the ui state \n   */\n\n  handleShoppingClickUI(item) {\n    if(item.staple) {\n      let staples = this.state.staples;\n      const index = _.findIndex(staples, e => {\n          return e._id === item._id\n      });\n      staples[index].checked = !item.checked;\n      this.setState({ staples })\n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      const index = _.findIndex(oneTimeItems, e => {\n          return e._id === item._id\n      });\n      oneTimeItems[index].checked = !item.checked;\n      this.setState({ oneTimeItems })\n    }\n  }\n\n  handleUpdateUI(item) {\n\n    if(item.staple) {\n      let staples = this.state.staples;\n      const index = _.findIndex(staples, e => {\n        return e._id === item._id\n      });\n      staples[index] = item;\n      this.setState({staples: staples})\n\n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      const index = _.findIndex(oneTimeItems, e => {\n        return e._id === item._id\n      });\n      oneTimeItems[index] = item;\n      this.setState({oneTimeItems: oneTimeItems})\n    }\n  }\n\n  handleBulkStatusUpdateUI(staplesArray) {\n    let staples = this.state.staples;\n\n    staplesArray.forEach(staple => {\n      let index = _.findIndex(staples, e => {\n        return staple._id === e._id;\n      });\n      staples[index].inventoryStatus = staple.inventoryStatus;\n      staples[index].checked = false;\n\n    });\n\n    this.setState({staples: staples})\n  }\n  \n  handleAddItemUI(newItem) {\n\n    if(newItem.staple) {\n      const staples = [newItem, ...this.state.staples];\n      this.setState({staples: staples}); \n\n    } else {\n      const oneTimeItems = [newItem, ...this.state.oneTimeItems];\n      this.setState({oneTimeItems: oneTimeItems});\n    }\n  }\n\n  handleDeleteUI(deleted, staple) {\n    if(staple) {\n      let staples = this.state.staples;\n      let index;\n      deleted.forEach(id => {\n        index = staples.map((e) => { \n          return e._id; \n        }).indexOf(id);\n        staples.splice(index, 1);\n      });\n      this.setState({ staples: staples });\n      \n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      let index;\n      deleted.forEach(id => {\n        index = oneTimeItems.map((e) => { \n          return e._id; \n        }).indexOf(id);\n        oneTimeItems.splice(index, 1);\n      });\n      this.setState({ oneTimeItems: oneTimeItems });\n    }\n    \n  }\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <Media query=\"(max-width: 699px)\">\n          {matches => \n            matches ? (\n              <Switch>\n                <Route path=\"/mobile\">\n                  <MobileContainer\n                  data={ this.state }\n                  handleShoppingClickUI={ this.handleShoppingClickUI }\n                  handleDeleteUI={ this.handleDeleteUI }\n                  handleUpdateUI={ this.handleUpdateUI }\n                  handleBulkStatusUpdateUI={ this.handleBulkStatusUpdateUI } \n                  /> \n                </Route>\n                <Redirect from=\"/app\" to=\"/mobile\" />\n                <Redirect from=\"/dashboard\" to=\"/mobile\" />\n              </Switch>\n            ) : (\n              <Switch>\n                <Route path=\"/dashboard\">\n                  <DashboardContainer \n                  data={ this.state } \n                  handleAddItemUI={ this.handleAddItemUI } \n                  handleUpdateUI={ this.handleUpdateUI }\n                  handleDeleteUI={ this.handleDeleteUI }\n                  />\n                </Route>\n                <Redirect from=\"/app\" to=\"/dashboard\" />\n                <Redirect from=\"/mobile\" to=\"/dashboard\" />\n              </Switch>\n            )\n          }\n        </Media>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <Router>\n      <App />\n    </Router>,\n  //</React.StrictMode>\n document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/mr-grocery.4b933b60.png\";"],"sourceRoot":""}