{"version":3,"sources":["components/heroBanner.js","components/mobile/listItem.js","components/mobile/category.js","containers/mobileContainer.js","components/dashboard/dashboardNav.js","containers/oneTimeItemsNav.js","containers/oneTimeItemsTable.js","containers/houseStaplesNav.js","containers/houseStaplesTable.js","containers/jkttStaplesNav.js","containers/jkttStaplesTable.js","containers/dashboardContainer.js","containers/App.js","index.js","img/mr-grocery.png"],"names":["HeroBanner","props","styles","backgroundImage","groceryMan","backgroundSize","backgroundColor","backgroundPosition","backgroundRepeat","Jumbotron","style","ButtonGroup","to","Button","variant","ListItem","handleClick","bind","this","item","checkbox","checked","container","display","alignItems","margin","itemContainer","padding","notes","fontSize","color","indicator","itemColor","inventoryStatus","background","height","width","Container","onClick","React","Component","Category","items","Form","Card","Header","category","map","key","uuidv4","MobileContainer","state","checkedStaples","checkedOneTimeItems","handleSubmit","handleClickUI","staple","setState","_id","index","_","findIndex","e","splice","indexOf","toDelete","toUpdate","length","axios","method","url","process","data","response","handleDeleteUI","JSON","parse","config","console","log","handleBulkStatusUpdateUI","staples","out","low","couldGetMore","groupBy","oneTimeItems","categorizedData","categories","Object","keys","fluid","DashboardNav","Nav","fill","Item","Link","OneTimeItemsNav","house","handleChange","target","id","value","preventDefault","handleAddItemUI","newItem","Navbar","expand","className","Toggle","aria-controls","Collapse","onSubmit","Group","FormControl","onChange","type","placeholder","handleDeleteSelected","OneTimeItemsTable","selected","handleCellEdit","handleSelect","updatedItem","handleUpdateUI","isSelect","array","allItems","label","columns","dataField","text","sort","editor","Type","SELECT","options","selectRow","mode","bgColor","hideSelectColumn","clickToSelect","clickToEdit","onSelect","row","rowIndex","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","column","keyField","striped","hover","condensed","HouseStaplesNav","Control","as","HouseStaplesTable","houseItems","true","editable","JKTTStaplesNav","JKTTStaplesTable","false","DashboardContainer","Fragment","path","App","handleShoppingClickUI","get","object","staplesArray","forEach","deleted","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0343f771.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport groceryMan from '../img/mr-grocery.png';\n// import BootstrapSwitchButton from 'bootstrap-switch-button-react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nconst HeroBanner = (props) => {\n\n    const styles = {\n        backgroundImage: `url(${groceryMan})`,\n        backgroundSize: 'contain',\n        backgroundColor: 'white',\n        backgroundPosition: '250px 0px',\n        backgroundRepeat: 'no-repeat',\n\n    };\n\n    return (\n        <Jumbotron style={ styles } >\n            <h1>\n                Mr Grocery\n            </h1>\n            <p>\n                Welcome to Mr Grocery\n            </p>\n            <ButtonGroup>\n                <LinkContainer to=\"/dashboard/\">\n                    <Button variant=\"outline-primary\">Dashboard</Button>\n                </LinkContainer>\n                <LinkContainer to=\"/mobile\">\n                    <Button variant=\"outline-info\">Mobile</Button>\n                </LinkContainer>\n            </ButtonGroup>\n        </Jumbotron>\n    );\n}\n\nexport default HeroBanner;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { IoIosRadioButtonOff, IoIosRadioButtonOn } from 'react-icons/io'\n\nclass ListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.handleClick(this.props.item);\n    }\n\n    render() {\n        const checked = this.props.item.checked\n        let checkbox;\n\n        checked ? checkbox = <IoIosRadioButtonOn /> : checkbox = <IoIosRadioButtonOff />; \n\n        const background = (item) => {\n            let itemColor;\n            switch (item.inventoryStatus) {\n                case 'Well Stocked':\n                    itemColor = '#05c46b'\n                    break;\n                case 'Could Get More':\n                    itemColor = '#ffc048'\n                    break;\n                default:\n                    itemColor = '#ff5e57'\n                    break;\n            }\n            return itemColor;\n        }\n\n        const styles = {\n            container: {\n                display: \"inline-flex\", \n                alignItems: \"center\",\n                margin: \"0px 0px 5px 0px\",\n                backgroundColor: 'white'\n            },\n            itemContainer: {\n                padding: \"10px 5px\"\n            },\n            notes: {\n                fontSize: \"75%\",\n                color: \"#485460\"\n            },\n            indicator: {\n                backgroundColor: background(this.props.item),\n                height: '2px',\n                width: '20px',\n            }\n        }\n        \n        return(\n        <Container onClick={ this.handleClick } style={ styles.container }>\n            { checkbox }\n            <div style={ styles.itemContainer }>\n                <div>{ this.props.item.item }</div>\n                <div style={ styles.notes }>{ this.props.item.notes }</div>\n            </div>\n            <div style={ styles.indicator } />\n        </Container>\n        );\n    }\n\n}\n\nexport default ListItem;","import React from 'react';\nimport { Card, Form } from 'react-bootstrap';\n// import ListItem from './listItem';\nimport ListItem from './listItem';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Category = (props) => {\n\n    const items = props.items;\n\n    const styles = {\n        margin: \"0px 0px 5px 0px\"\n    };\n\n    return (\n        <Form>\n            <Card>\n                <Card.Header style={ styles }>{ props.category }</Card.Header>\n                {\n                items.map(item => {\n                    return(\n                        <ListItem\n                        item={ item }\n                        handleClick={ props.handleClick }\n                        key={ uuidv4() }\n                        />\n                    )\n                }) \n                }\n            </Card>\n        </Form>\n    );\n}\n\nexport default Category;","import React from 'react';\nimport Category from '../components/mobile/category';\nimport { Container, Button } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\nimport axios from 'axios';\n\n\nclass MobileContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedStaples: [],\n            checkedOneTimeItems: []\n        }\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleClick(item) {\n        this.props.handleClickUI(item);\n\n        if(item.staple) {\n\n            if (item.checked) {\n                this.setState({ checkedStaples: [...this.state.checkedStaples, {_id: item._id, inventoryStatus: 'Well Stocked'}] });\n            } else {\n                let checkedStaples = this.state.checkedStaples;\n                const index = _.findIndex(checkedStaples, e => {\n                    return e._id === item._id\n                });\n                checkedStaples.splice(index, 1);\n                this.setState({ checkedStaples })\n                \n            }\n\n        } else {\n\n            if (item.checked) {\n                this.setState({ checkedOneTimeItems: [...this.state.checkedOneTimeItems, item._id] });\n            } else {\n                let checkedOneTimeItems = this.state.checkedOneTimeItems;\n                const index = checkedOneTimeItems.indexOf(item._id);\n                if (index > -1) {\n                    checkedOneTimeItems.splice(index, 1);\n                    this.setState({ checkedOneTimeItems })\n                };\n                \n            }\n        }\n    }\n\n    async handleSubmit() {\n\n        const toDelete = this.state.checkedOneTimeItems;\n        const toUpdate = this.state.checkedStaples;\n        let response;\n\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: toDelete\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), false);\n                //reset component state\n                this.setState({checkedOneTimeItems: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        if (toUpdate.length > 0) {\n            try {\n                //updates the database\n                response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_BULKSTATUSUPDATE,\n                    data: toUpdate\n\n                });\n                //updates ui\n                this.props.handleBulkStatusUpdateUI(JSON.parse(response.config.data));\n\n                this.setState({checkedStaples: []})\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    \n\n    render() {\n        /**\n         * the following code filters out well stocked items\n         * so that only items needed at the store will show up\n         * in the shopping version of the mobile app\n         */\n\n        //sets up variables as empty arrays so they're still iterable before load.\n        let data = this.props.data.staples;\n        let out = [];\n        let low = [];\n        let couldGetMore = [];\n        //groups by inventory status and puts only desired statuses into an array.\n        data = _.groupBy(data, 'inventoryStatus');\n        if(data['Out']) out = data['Out'];\n        if(data['Low']) low = data['Low'];\n        if(data['Could Get More']) couldGetMore = data['Could Get More'];\n        data = [...out, ...low, ...couldGetMore, ...this.props.data.oneTimeItems];\n        //creates new object keyed out by category and an array of those categories.\n        const categorizedData = _.groupBy(data, 'category');\n        const categories = Object.keys(categorizedData);\n\n        return (\n            <Container fluid=\"sm\" >\n                <Button onClick={ this.handleSubmit } variant=\"info\">Update List</Button>\n                {\n                    categories.map(category => {\n                        return (\n                        <Category \n                        category={ category }\n                        items={ categorizedData[category] }\n                        handleClick={ this.handleClick }\n                        key={ uuidv4() } \n                        />\n                        )\n                    })\n                }\n            </Container>\n        );\n    }\n}\n\nexport default MobileContainer;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\nconst DashboardNav = (props) => {\n    return (\n        <Nav variant=\"tabs\" fill>\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/house-staples\">\n                    <Nav.Link>House Staples</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/jktt-staples\">\n                    <Nav.Link>JKTT Staples</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/one-time-items\">\n                    <Nav.Link>One Time Items</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n        </Nav>\n    );\n}\n\nexport default DashboardNav;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass OneTimeItemsNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: false\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_ONETIMEITEMS,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: false\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Item\n                        </Button>\n                        <Button\n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default OneTimeItemsNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport OneTimeItemsNav from './oneTimeItemsNav';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\n\nclass OneTimeItemsTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data, false));\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n\n        const oneTimeItems = this.props.data.oneTimeItems;\n        const allItems = [...this.props.data.oneTimeItems, ...this.props.data.staples];\n        const ranges = Object.keys(_.groupBy(allItems, 'category'));\n\n        const categories = ranges.map(category => {\n            return { value: category, label: category }\n        });\n\n        const columns = [{\n            dataField: 'item',\n            text: 'Item',\n            sort: true\n        }, {\n            dataField: 'notes',\n            text: 'Notes',\n            sort: true\n        }, {\n            dataField: 'category',\n            text: 'Category',\n            sort: true,\n            editor: {\n                type: Type.SELECT,\n                options: categories\n            }\n        }];\n\n        const selectRow = {\n            mode: 'checkbox',\n            bgColor: 'tomato',\n            hideSelectColumn: true,\n            clickToSelect: true,\n            clickToEdit: true,\n            onSelect: (row,isSelect, rowIndex, e) => {\n                this.handleSelect(row._id, isSelect);\n            }\n            \n        };\n\n        const cellEdit = cellEditFactory({\n            mode: 'dbclick', \n            blurToSave: true,\n            afterSaveCell: (oldValue, newValue, row, column) => {\n                this.handleCellEdit({\n                    _id: row._id,\n                    [column.dataField]: newValue\n                });\n            }\n        });\n\n        return (\n            <Container>\n                <OneTimeItemsNav \n                handleDeleteSelected={ this.handleDeleteSelected }\n                handleAddItemUI={ this.props.handleAddItemUI }\n                />\n                <BootstrapTable \n                keyField='_id'\n                data={ oneTimeItems }\n                columns={ columns }\n                selectRow={ selectRow }\n                cellEdit={ cellEdit }\n                striped\n                hover\n                condensed\n                />\n            </Container>\n        );\n    }\n}\n\nexport default OneTimeItemsTable;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass HouseStaplesNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: true,\n            staple: true\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"status\") {\n            this.setState({ inventoryStatus: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_STAPLES,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: true,\n            staple: true\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Form.Control\n                        value={ this.state.inventoryStatus } \n                        onChange={ this.handleChange }\n                        id=\"status\"  \n                        as=\"select\"\n                        placeholder=\"Inventory Status\"\n                        className=\"mr-sm-2\"\n                        >\n                            <option>Well Stocked</option>\n                            <option>Could Get More</option>\n                            <option>Low</option>\n                            <option>Out</option>\n                        </Form.Control>\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Staple\n                        </Button>\n                        <Button \n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default HouseStaplesNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\nimport HouseStaplesNav from './houseStaplesNav';\n\nclass HouseStaplesTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), true);\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n        const items = this.props.data.staples;\n        const groupedItems = _.groupBy(items, 'house');\n        let houseItems = groupedItems.true;\n\n        //will only render if houseItems is defined\n        if(houseItems) {\n            const ranges = Object.keys(_.groupBy(houseItems, 'category'));\n            const categories = ranges.map(category => {\n                return { value: category, label: category }\n            });\n\n            const inventoryStatusRanges = [{\n                value: 'Well Stocked', \n                label: 'Well Stocked'\n            }, {\n                value: 'Could Get More',\n                label: 'Could Get More'\n            }, {\n                value: 'Low',\n                label: 'Low'\n            }, {\n                value: 'Out',\n                label: 'Out'\n            }];\n\n            const columns = [{\n                dataField: 'item',\n                text: 'Item',\n                sort: true\n            }, {\n                dataField: 'inventoryStatus',\n                text: 'Inventory Status',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: inventoryStatusRanges\n                }\n            }, {\n                dataField: 'updated',\n                text: 'Last Updated',\n                editable: false,\n                sort: true\n            }, {\n                dataField: 'notes',\n                text: 'Notes',\n                sort: true\n            }, {\n                dataField: 'category',\n                text: 'Category',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: categories\n                }\n            }];\n\n            const selectRow = {\n                mode: 'checkbox',\n                bgColor: 'tomato',\n                hideSelectColumn: true,\n                clickToSelect: true,\n                clickToEdit: true,\n                onSelect: (row,isSelect, rowIndex, e) => {\n                    this.handleSelect(row._id, isSelect);\n                }\n                \n            };\n\n            const cellEdit = cellEditFactory({\n                mode: 'dbclick', \n                blurToSave: true,\n                afterSaveCell: (oldValue, newValue, row, column) => {\n                    this.handleCellEdit({\n                        _id: row._id,\n                        [column.dataField]: newValue\n                    });\n                }\n            });\n        \n\n            return (\n                <Container>\n                    <HouseStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                    <BootstrapTable \n                    keyField='_id'\n                    data={ houseItems }\n                    columns={ columns }\n                    selectRow={ selectRow }\n                    cellEdit={ cellEdit }\n                    striped\n                    hover\n                    condensed\n                    />\n                </Container>\n            );\n\n        } else {\n            return (\n                <Container>\n                    <HouseStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                </Container>\n            );\n        }\n    }\n}\n\nexport default HouseStaplesTable;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass JKTTStaplesNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: true\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"status\") {\n            this.setState({ inventoryStatus: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_STAPLES,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: true\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Form.Control\n                        value={ this.state.inventoryStatus } \n                        onChange={ this.handleChange }\n                        id=\"status\"  \n                        as=\"select\"\n                        placeholder=\"Inventory Status\"\n                        className=\"mr-sm-2\"\n                        >\n                            <option>Well Stocked</option>\n                            <option>Could Get More</option>\n                            <option>Low</option>\n                            <option>Out</option>\n                        </Form.Control>\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Staple\n                        </Button>\n                        <Button \n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default JKTTStaplesNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\nimport JKTTStaplesNav from './jkttStaplesNav';\n\nclass JKTTStaplesTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), true);\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n        const items = this.props.data.staples;\n        const groupedItems = _.groupBy(items, 'house');\n        let houseItems = groupedItems.false;\n\n        //will only render if houseItems is defined\n        if(houseItems) {\n            const ranges = Object.keys(_.groupBy(houseItems, 'category'));\n            const categories = ranges.map(category => {\n                return { value: category, label: category }\n            });\n\n            const inventoryStatusRanges = [{\n                value: 'Well Stocked', \n                label: 'Well Stocked'\n            }, {\n                value: 'Could Get More',\n                label: 'Could Get More'\n            }, {\n                value: 'Low',\n                label: 'Low'\n            }, {\n                value: 'Out',\n                label: 'Out'\n            }];\n\n            const columns = [{\n                dataField: 'item',\n                text: 'Item',\n                sort: true\n            }, {\n                dataField: 'inventoryStatus',\n                text: 'Inventory Status',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: inventoryStatusRanges\n                }\n            }, {\n                dataField: 'updated',\n                text: 'Last Updated',\n                sort: true,\n                editable: false\n            }, {\n                dataField: 'notes',\n                text: 'Notes',\n                sort: true\n            }, {\n                dataField: 'category',\n                text: 'Category',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: categories\n                }\n            }];\n\n            const selectRow = {\n                mode: 'checkbox',\n                bgColor: 'tomato',\n                hideSelectColumn: true,\n                clickToSelect: true,\n                clickToEdit: true,\n                onSelect: (row,isSelect, rowIndex, e) => {\n                    this.handleSelect(row._id, isSelect);\n                }\n                \n            };\n\n            const cellEdit = cellEditFactory({\n                mode: 'dbclick', \n                blurToSave: true,\n                afterSaveCell: (oldValue, newValue, row, column) => {\n                    this.handleCellEdit({\n                        _id: row._id,\n                        [column.dataField]: newValue\n                    });\n                }\n            });\n        \n\n            return (\n                <Container>\n                    <JKTTStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                    <BootstrapTable \n                    keyField='_id'\n                    data={ houseItems }\n                    columns={ columns }\n                    selectRow={ selectRow }\n                    cellEdit={ cellEdit }\n                    striped\n                    hover\n                    condensed\n                    />\n                </Container>\n            );\n\n        } else {\n            return (\n                <Container>\n                    <JKTTStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                </Container>\n            );\n        }\n    }\n}\n\nexport default JKTTStaplesTable;","import React from 'react';\nimport DashboardNav from '../components/dashboard/dashboardNav';\nimport OneTimeItemsTable from './oneTimeItemsTable';\nimport HouseStaplesTable from './houseStaplesTable';\nimport JKTTStaplesTable from './jkttStaplesTable';\nimport { Switch, Route } from 'react-router-dom';\n\nclass DashboardContainer extends React.Component {\n    render() {\n        const data = this.props.data\n        return(\n            <React.Fragment>\n                <DashboardNav />\n                <Switch>\n                    <Route path='/dashboard/house-staples'>\n                        <HouseStaplesTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI }\n                        />\n                    </Route>\n                    <Route path='/dashboard/jktt-staples'>\n                        <JKTTStaplesTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI } \n                        />\n                    </Route>\n                    <Route path='/dashboard/one-time-items'>\n                        <OneTimeItemsTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI } \n                        />\n                    </Route>\n                </Switch>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DashboardContainer;","import React from 'react';\nimport HeroBanner from '../components/heroBanner';\nimport MobileContainer from './mobileContainer';\nimport DashboardContainer from './dashboardContainer';\nimport { Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from 'axios';\nimport _ from 'lodash';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      staples: [], \n      oneTimeItems: []\n    }\n\n    this.handleShoppingClickUI = this.handleShoppingClickUI.bind(this);\n    this.handleUpdateUI = this.handleUpdateUI.bind(this);\n    this.handleAddItemUI = this.handleAddItemUI.bind(this);\n    this.handleDeleteUI = this.handleDeleteUI.bind(this);\n    this.handleBulkStatusUpdateUI = this.handleBulkStatusUpdateUI.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n\n      //fetches data from the api on component mount\n      const staples = await axios.get(process.env.REACT_APP_API_STAPLES);\n      const oneTimeItems = await axios.get(process.env.REACT_APP_API_ONETIMEITEMS);\n      \n      //adds a checked parameter to each object\n      const checkedStaples = staples.data.map(object => {\n        return {...object, checked: false}\n      });\n      const checkedOneTimeItems = oneTimeItems.data.map(object => {\n        return {...object, checked: false}\n      });\n\n      this.setState({ staples: checkedStaples, oneTimeItems: checkedOneTimeItems });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /******************************************************************\n   * All of these functions update the ui state \n   */\n\n  handleShoppingClickUI(item) {\n    if(item.staple) {\n      let staples = this.state.staples;\n      const index = _.findIndex(staples, e => {\n          return e._id === item._id\n      });\n      staples[index].checked = !item.checked;\n      this.setState({ staples })\n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      const index = _.findIndex(oneTimeItems, e => {\n          return e._id === item._id\n      });\n      oneTimeItems[index].checked = !item.checked;\n      this.setState({ oneTimeItems })\n    }\n  }\n\n  handleUpdateUI(item) {\n\n    if(item.staple) {\n      let staples = this.state.staples;\n      const index = _.findIndex(staples, e => {\n        return e._id === item._id\n      });\n      staples[index] = item;\n      this.setState({staples: staples})\n\n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      const index = _.findIndex(oneTimeItems, e => {\n        return e._id === item._id\n      });\n      oneTimeItems[index] = item;\n      this.setState({oneTimeItems: oneTimeItems})\n    }\n  }\n\n  handleBulkStatusUpdateUI(staplesArray) {\n    let staples = this.state.staples;\n\n    staplesArray.forEach(staple => {\n      let index = _.findIndex(staples, e => {\n        return staple._id === e._id;\n      });\n      staples[index].inventoryStatus = staple.inventoryStatus;\n      staples[index].checked = false;\n\n    });\n\n    this.setState({staples: staples})\n  }\n  \n  handleAddItemUI(newItem) {\n\n    if(newItem.staple) {\n      const staples = [newItem, ...this.state.staples];\n      this.setState({staples: staples}); \n\n    } else {\n      const oneTimeItems = [newItem, ...this.state.oneTimeItems];\n      this.setState({oneTimeItems: oneTimeItems});\n    }\n  }\n\n  handleDeleteUI(deleted, staple) {\n    if(staple) {\n      let staples = this.state.staples;\n      let index;\n      deleted.forEach(id => {\n        index = staples.map((e) => { \n          return e._id; \n        }).indexOf(id);\n        staples.splice(index, 1);\n      });\n      this.setState({ staples: staples });\n      \n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      let index;\n      deleted.forEach(id => {\n        index = oneTimeItems.map((e) => { \n          return e._id; \n        }).indexOf(id);\n        oneTimeItems.splice(index, 1);\n      });\n      this.setState({ oneTimeItems: oneTimeItems });\n    }\n    \n  }\n\n  \n  render() {\n    return (\n      <React.Fragment>\n        <HeroBanner />\n        <Switch>\n          <Route path=\"/dashboard\">\n            <DashboardContainer \n            data={ this.state } \n            handleAddItemUI={ this.handleAddItemUI } \n            handleUpdateUI={ this.handleUpdateUI }\n            handleDeleteUI={ this.handleDeleteUI }\n            />\n          </Route>\n          <Route path=\"/mobile\">\n            <MobileContainer \n            handleClickUI={ this.handleShoppingClickUI }\n            handleDeleteUI={ this.handleDeleteUI }\n            handleBulkStatusUpdateUI={ this.handleBulkStatusUpdateUI } \n            data={ this.state }\n            />\n          </Route>\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <Router>\n      <App />\n    </Router>,\n  //</React.StrictMode>\n document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/mr-grocery.4b933b60.png\";"],"sourceRoot":""}