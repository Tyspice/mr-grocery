{"version":3,"sources":["components/heroBanner.js","components/mobile/listItem.js","components/mobile/category.js","containers/mobileContainer.js","components/dashboard/dashboardNav.js","containers/oneTimeItemsNav.js","containers/oneTimeItemsTable.js","containers/houseStaplesNav.js","containers/houseStaplesTable.js","containers/jkttStaplesNav.js","containers/jkttStaplesTable.js","containers/dashboardContainer.js","containers/App.js","index.js"],"names":["HeroBanner","props","Jumbotron","ButtonGroup","to","Button","variant","ListItem","handleClick","bind","this","item","checkbox","checked","styles","container","display","alignItems","margin","borderRadius","borderStyle","borderWidth","backgroundColor","itemColor","inventoryStatus","background","itemContainer","padding","notes","fontSize","color","Container","onClick","style","React","Component","Category","items","Form","Card","Header","category","map","key","uuidv4","MobileContainer","state","checkedStaples","checkedOneTimeItems","handleSubmit","handleClickUI","staple","setState","_id","index","_","findIndex","e","splice","indexOf","toDelete","toUpdate","length","axios","method","url","process","data","response","handleDeleteUI","JSON","parse","config","console","log","handleBulkStatusUpdateUI","staples","out","low","couldGetMore","groupBy","oneTimeItems","categorizedData","categories","Object","keys","fluid","DashboardNav","Nav","Item","Link","OneTimeItemsNav","house","handleChange","target","id","value","preventDefault","handleAddItemUI","newItem","Navbar","expand","className","Toggle","aria-controls","Collapse","onSubmit","Group","FormControl","onChange","type","placeholder","handleDeleteSelected","OneTimeItemsTable","selected","handleCellEdit","handleSelect","updatedItem","handleUpdateUI","isSelect","array","allItems","label","columns","dataField","text","sort","editor","Type","SELECT","options","selectRow","mode","bgColor","hideSelectColumn","clickToSelect","clickToEdit","onSelect","row","rowIndex","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","newValue","column","keyField","striped","hover","condensed","HouseStaplesNav","Control","as","HouseStaplesTable","houseItems","true","editable","JKTTStaplesNav","JKTTStaplesTable","false","DashboardContainer","Fragment","path","App","handleShoppingClickUI","get","object","staplesArray","forEach","deleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44c4dfca.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { LinkContainer } from 'react-router-bootstrap';\n// import BootstrapSwitchButton from 'bootstrap-switch-button-react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nconst HeroBanner = (props) => {\n    return (\n        <Jumbotron>\n            <h1>\n                Mr Grocery\n            </h1>\n            <p>\n                Welcome to Mr Grocery\n            </p>\n            <ButtonGroup>\n                <LinkContainer to=\"/dashboard/\">\n                    <Button variant=\"info\">Dashboard</Button>\n                </LinkContainer>\n                <LinkContainer to=\"/mobile\">\n                    <Button variant=\"success\">Mobile</Button>\n                </LinkContainer>\n            </ButtonGroup>\n        </Jumbotron>\n    );\n}\n\nexport default HeroBanner;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { IoIosRadioButtonOff, IoIosRadioButtonOn } from 'react-icons/io'\n\nclass ListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.handleClick(this.props.item);\n    }\n\n    render() {\n        const checked = this.props.item.checked\n        let checkbox;\n\n        checked ? checkbox = <IoIosRadioButtonOn /> : checkbox = <IoIosRadioButtonOff />; \n\n        const background = (item) => {\n            let itemColor;\n            switch (item.inventoryStatus) {\n                case 'Well Stocked':\n                    itemColor = '#05c46b'\n                    break;\n                case 'Could Get More':\n                    itemColor = '#ffc048'\n                    break;\n                default:\n                    itemColor = '#ff5e57'\n                    break;\n            }\n            return itemColor;\n        }\n\n        const styles = {\n            container: {\n                display: \"inline-flex\", \n                alignItems: \"center\",\n                margin: \"0px 0px 5px 0px\",\n                borderRadius: \"10px\",\n                borderStyle: \"solid\",\n                borderWidth: \"1px\",\n                backgroundColor: background(this.props.item)\n            },\n            itemContainer: {\n                padding: \"10px 5px\"\n            },\n            notes: {\n                fontSize: \"75%\",\n                color: \"#485460\"\n            }\n        }\n        \n        return(\n        <Container onClick={ this.handleClick } style={ styles.container }>\n            { checkbox }\n            <div style={ styles.itemContainer }>\n                <div>{ this.props.item.item }</div>\n                <div style={ styles.notes }>{ this.props.item.notes }</div>\n            </div>\n        </Container>\n        );\n    }\n\n}\n\nexport default ListItem;","import React from 'react';\nimport { Card, Form } from 'react-bootstrap';\n// import ListItem from './listItem';\nimport ListItem from './listItem';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Category = (props) => {\n\n    const items = props.items;\n\n    const styles = {\n        margin: \"0px 0px 5px 0px\"\n    };\n\n    return (\n        <Form>\n            <Card>\n                <Card.Header style={ styles }>{ props.category }</Card.Header>\n                {\n                items.map(item => {\n                    return(\n                        <ListItem\n                        item={ item }\n                        handleClick={ props.handleClick }\n                        key={ uuidv4() }\n                        />\n                    )\n                }) \n                }\n            </Card>\n        </Form>\n    );\n}\n\nexport default Category;","import React from 'react';\nimport Category from '../components/mobile/category';\nimport { Container, Button } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\nimport axios from 'axios';\n\n\nclass MobileContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedStaples: [],\n            checkedOneTimeItems: []\n        }\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleClick(item) {\n        this.props.handleClickUI(item);\n\n        if(item.staple) {\n\n            if (item.checked) {\n                this.setState({ checkedStaples: [...this.state.checkedStaples, {_id: item._id, inventoryStatus: 'Well Stocked'}] });\n            } else {\n                let checkedStaples = this.state.checkedStaples;\n                const index = _.findIndex(checkedStaples, e => {\n                    return e._id === item._id\n                });\n                checkedStaples.splice(index, 1);\n                this.setState({ checkedStaples })\n                \n            }\n\n        } else {\n\n            if (item.checked) {\n                this.setState({ checkedOneTimeItems: [...this.state.checkedOneTimeItems, item._id] });\n            } else {\n                let checkedOneTimeItems = this.state.checkedOneTimeItems;\n                const index = checkedOneTimeItems.indexOf(item._id);\n                if (index > -1) {\n                    checkedOneTimeItems.splice(index, 1);\n                    this.setState({ checkedOneTimeItems })\n                };\n                \n            }\n        }\n    }\n\n    async handleSubmit() {\n\n        const toDelete = this.state.checkedOneTimeItems;\n        const toUpdate = this.state.checkedStaples;\n        let response;\n\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: toDelete\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), false);\n                //reset component state\n                this.setState({checkedOneTimeItems: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        if (toUpdate.length > 0) {\n            try {\n                //updates the database\n                response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_BULKSTATUSUPDATE,\n                    data: toUpdate\n\n                });\n                //updates ui\n                this.props.handleBulkStatusUpdateUI(JSON.parse(response.config.data));\n\n                this.setState({checkedStaples: []})\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    \n\n    render() {\n        /**\n         * the following code filters out well stocked items\n         * so that only items needed at the store will show up\n         * in the shopping version of the mobile app\n         */\n\n        //sets up variables as empty arrays so they're still iterable before load.\n        let data = this.props.data.staples;\n        let out = [];\n        let low = [];\n        let couldGetMore = [];\n        //groups by inventory status and puts only desired statuses into an array.\n        data = _.groupBy(data, 'inventoryStatus');\n        if(data['Out']) out = data['Out'];\n        if(data['Low']) low = data['Low'];\n        if(data['Could Get More']) couldGetMore = data['Could Get More'];\n        data = [...out, ...low, ...couldGetMore, ...this.props.data.oneTimeItems];\n        //creates new object keyed out by category and an array of those categories.\n        const categorizedData = _.groupBy(data, 'category');\n        const categories = Object.keys(categorizedData);\n\n        return (\n            <Container fluid=\"sm\" >\n                <Button onClick={ this.handleSubmit } variant=\"info\">Update List</Button>\n                {\n                    categories.map(category => {\n                        return (\n                        <Category \n                        category={ category }\n                        items={ categorizedData[category] }\n                        handleClick={ this.handleClick }\n                        key={ uuidv4() } \n                        />\n                        )\n                    })\n                }\n            </Container>\n        );\n    }\n}\n\nexport default MobileContainer;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\nconst DashboardNav = (props) => {\n    return (\n        <Nav variant=\"tabs\">\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/house-staples\">\n                    <Nav.Link>House Staples</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/jktt-staples\">\n                    <Nav.Link>JKTT Staples</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n                <LinkContainer to=\"/dashboard/one-time-items\">\n                    <Nav.Link>One Time Items</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n        </Nav>\n    );\n}\n\nexport default DashboardNav;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass OneTimeItemsNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: false\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_ONETIMEITEMS,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: false\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Item\n                        </Button>\n                        <Button\n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default OneTimeItemsNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport OneTimeItemsNav from './oneTimeItemsNav';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\n\nclass OneTimeItemsTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_ONETIMEITEMS,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data, false));\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n\n        const oneTimeItems = this.props.data.oneTimeItems;\n        const allItems = [...this.props.data.oneTimeItems, ...this.props.data.staples];\n        const ranges = Object.keys(_.groupBy(allItems, 'category'));\n\n        const categories = ranges.map(category => {\n            return { value: category, label: category }\n        });\n\n        const columns = [{\n            dataField: 'item',\n            text: 'Item',\n            sort: true\n        }, {\n            dataField: 'notes',\n            text: 'Notes',\n            sort: true\n        }, {\n            dataField: 'category',\n            text: 'Category',\n            sort: true,\n            editor: {\n                type: Type.SELECT,\n                options: categories\n            }\n        }];\n\n        const selectRow = {\n            mode: 'checkbox',\n            bgColor: 'tomato',\n            hideSelectColumn: true,\n            clickToSelect: true,\n            clickToEdit: true,\n            onSelect: (row,isSelect, rowIndex, e) => {\n                this.handleSelect(row._id, isSelect);\n            }\n            \n        };\n\n        const cellEdit = cellEditFactory({\n            mode: 'dbclick', \n            blurToSave: true,\n            afterSaveCell: (oldValue, newValue, row, column) => {\n                this.handleCellEdit({\n                    _id: row._id,\n                    [column.dataField]: newValue\n                });\n            }\n        });\n\n        return (\n            <Container>\n                <OneTimeItemsNav \n                handleDeleteSelected={ this.handleDeleteSelected }\n                handleAddItemUI={ this.props.handleAddItemUI }\n                />\n                <BootstrapTable \n                keyField='_id'\n                data={ oneTimeItems }\n                columns={ columns }\n                selectRow={ selectRow }\n                cellEdit={ cellEdit }\n                striped\n                hover\n                condensed\n                />\n            </Container>\n        );\n    }\n}\n\nexport default OneTimeItemsTable;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass HouseStaplesNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: true,\n            staple: true\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"status\") {\n            this.setState({ inventoryStatus: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_STAPLES,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: true,\n            staple: true\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Form.Control\n                        value={ this.state.inventoryStatus } \n                        onChange={ this.handleChange }\n                        id=\"status\"  \n                        as=\"select\"\n                        placeholder=\"Inventory Status\"\n                        className=\"mr-sm-2\"\n                        >\n                            <option>Well Stocked</option>\n                            <option>Could Get More</option>\n                            <option>Low</option>\n                            <option>Out</option>\n                        </Form.Control>\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Staple\n                        </Button>\n                        <Button \n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default HouseStaplesNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\nimport HouseStaplesNav from './houseStaplesNav';\n\nclass HouseStaplesTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), true);\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n        const items = this.props.data.staples;\n        const groupedItems = _.groupBy(items, 'house');\n        let houseItems = groupedItems.true;\n\n        //will only render if houseItems is defined\n        if(houseItems) {\n            const ranges = Object.keys(_.groupBy(houseItems, 'category'));\n            const categories = ranges.map(category => {\n                return { value: category, label: category }\n            });\n\n            const inventoryStatusRanges = [{\n                value: 'Well Stocked', \n                label: 'Well Stocked'\n            }, {\n                value: 'Could Get More',\n                label: 'Could Get More'\n            }, {\n                value: 'Low',\n                label: 'Low'\n            }, {\n                value: 'Out',\n                label: 'Out'\n            }];\n\n            const columns = [{\n                dataField: 'item',\n                text: 'Item',\n                sort: true\n            }, {\n                dataField: 'inventoryStatus',\n                text: 'Inventory Status',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: inventoryStatusRanges\n                }\n            }, {\n                dataField: 'updated',\n                text: 'Last Updated',\n                editable: false,\n                sort: true\n            }, {\n                dataField: 'notes',\n                text: 'Notes',\n                sort: true\n            }, {\n                dataField: 'category',\n                text: 'Category',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: categories\n                }\n            }];\n\n            const selectRow = {\n                mode: 'checkbox',\n                bgColor: 'tomato',\n                hideSelectColumn: true,\n                clickToSelect: true,\n                clickToEdit: true,\n                onSelect: (row,isSelect, rowIndex, e) => {\n                    this.handleSelect(row._id, isSelect);\n                }\n                \n            };\n\n            const cellEdit = cellEditFactory({\n                mode: 'dbclick', \n                blurToSave: true,\n                afterSaveCell: (oldValue, newValue, row, column) => {\n                    this.handleCellEdit({\n                        _id: row._id,\n                        [column.dataField]: newValue\n                    });\n                }\n            });\n        \n\n            return (\n                <Container>\n                    <HouseStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                    <BootstrapTable \n                    keyField='_id'\n                    data={ houseItems }\n                    columns={ columns }\n                    selectRow={ selectRow }\n                    cellEdit={ cellEdit }\n                    striped\n                    hover\n                    condensed\n                    />\n                </Container>\n            );\n\n        } else {\n            return (\n                <Container>\n                    <HouseStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                </Container>\n            );\n        }\n    }\n}\n\nexport default HouseStaplesTable;","import React from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass JKTTStaplesNav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: true\n            }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleChange(e) {\n        if (e.target.id === \"item\") {\n            this.setState({ item: e.target.value });\n        } else if (e.target.id === \"status\") {\n            this.setState({ inventoryStatus: e.target.value });\n        } else if (e.target.id === \"notes\") {\n            this.setState({ notes: e.target.value });\n        } else if (e.target.id === \"category\") {\n            this.setState({ category: e.target.value });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        try {\n            //updates database\n            const response = await axios({\n                method: 'POST',\n                url: process.env.REACT_APP_API_STAPLES,\n                data: this.state\n            });\n            //updates ui\n            this.props.handleAddItemUI(response.data.newItem);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({\n            item: '',\n            inventoryStatus: '',\n            notes: '',\n            category: '',\n            house: false,\n            staple: true\n            });\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"xlg\" className=\"justify-content-between\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form onSubmit={ this.handleSubmit }>\n                    <Form.Group>\n                        <FormControl \n                        value={ this.state.item } \n                        onChange={ this.handleChange } \n                        id=\"item\" \n                        type=\"text\" \n                        placeholder=\"Item\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Form.Control\n                        value={ this.state.inventoryStatus } \n                        onChange={ this.handleChange }\n                        id=\"status\"  \n                        as=\"select\"\n                        placeholder=\"Inventory Status\"\n                        className=\"mr-sm-2\"\n                        >\n                            <option>Well Stocked</option>\n                            <option>Could Get More</option>\n                            <option>Low</option>\n                            <option>Out</option>\n                        </Form.Control>\n                        <FormControl\n                        value={ this.state.notes } \n                        onChange={ this.handleChange } \n                        id=\"notes\" \n                        type=\"text\" \n                        placeholder=\"Notes\" \n                        className=\"mr-sm-2\" \n                        />\n                        <FormControl\n                        value={ this.state.category } \n                        onChange={ this.handleChange } \n                        id=\"category\" \n                        type=\"text\" \n                        placeholder=\"Category\" \n                        className=\"mr-sm-2\" \n                        />\n                        <Button \n                        type=\"submit\"\n                        >\n                            Add Staple\n                        </Button>\n                        <Button \n                        variant=\"danger\"\n                        onClick={ this.props.handleDeleteSelected }\n                        >\n                        Delete Selected\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </Navbar.Collapse>\n            </Navbar>\n                \n        );\n    }\n}\n\nexport default JKTTStaplesNav;","import React from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { Type } from 'react-bootstrap-table2-editor';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport _ from 'lodash';\nimport JKTTStaplesNav from './jkttStaplesNav';\n\nclass JKTTStaplesTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: []\n        };\n\n        this.handleCellEdit = this.handleCellEdit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n    }\n\n    async handleCellEdit(updatedItem) {\n        if(updatedItem) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'PATCH',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: updatedItem\n                });\n                //updates the ui\n                this.props.handleUpdateUI(response.data.newItem);\n            } catch (error) {\n                console.log(error);\n            }\n        }   \n    }\n\n    async handleDeleteSelected() {\n        const toDelete = this.state.selected;\n        if (toDelete.length > 0) {\n            try {\n                //updates the database\n                const response = await axios({\n                    method: 'DELETE',\n                    url: process.env.REACT_APP_API_STAPLES,\n                    data: this.state.selected\n                });\n                //updates the ui\n                this.props.handleDeleteUI(JSON.parse(response.config.data), true);\n                this.setState({selected: []});\n    \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleSelect(id, isSelect) {\n        if (isSelect) {\n            this.setState({ selected: [...this.state.selected, id] });\n        } else {\n            let array = this.state.selected;\n            const index = array.indexOf(id);\n            if (index > -1) {\n                array.splice(index, 1);\n                this.setState({ selected: array })\n            };\n            \n        }\n    }\n\n    render() {\n        const items = this.props.data.staples;\n        const groupedItems = _.groupBy(items, 'house');\n        let houseItems = groupedItems.false;\n\n        //will only render if houseItems is defined\n        if(houseItems) {\n            const ranges = Object.keys(_.groupBy(houseItems, 'category'));\n            const categories = ranges.map(category => {\n                return { value: category, label: category }\n            });\n\n            const inventoryStatusRanges = [{\n                value: 'Well Stocked', \n                label: 'Well Stocked'\n            }, {\n                value: 'Could Get More',\n                label: 'Could Get More'\n            }, {\n                value: 'Low',\n                label: 'Low'\n            }, {\n                value: 'Out',\n                label: 'Out'\n            }];\n\n            const columns = [{\n                dataField: 'item',\n                text: 'Item',\n                sort: true\n            }, {\n                dataField: 'inventoryStatus',\n                text: 'Inventory Status',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: inventoryStatusRanges\n                }\n            }, {\n                dataField: 'updated',\n                text: 'Last Updated',\n                sort: true,\n                editable: false\n            }, {\n                dataField: 'notes',\n                text: 'Notes',\n                sort: true\n            }, {\n                dataField: 'category',\n                text: 'Category',\n                sort: true,\n                editor: {\n                    type: Type.SELECT,\n                    options: categories\n                }\n            }];\n\n            const selectRow = {\n                mode: 'checkbox',\n                bgColor: 'tomato',\n                hideSelectColumn: true,\n                clickToSelect: true,\n                clickToEdit: true,\n                onSelect: (row,isSelect, rowIndex, e) => {\n                    this.handleSelect(row._id, isSelect);\n                }\n                \n            };\n\n            const cellEdit = cellEditFactory({\n                mode: 'dbclick', \n                blurToSave: true,\n                afterSaveCell: (oldValue, newValue, row, column) => {\n                    this.handleCellEdit({\n                        _id: row._id,\n                        [column.dataField]: newValue\n                    });\n                }\n            });\n        \n\n            return (\n                <Container>\n                    <JKTTStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                    <BootstrapTable \n                    keyField='_id'\n                    data={ houseItems }\n                    columns={ columns }\n                    selectRow={ selectRow }\n                    cellEdit={ cellEdit }\n                    striped\n                    hover\n                    condensed\n                    />\n                </Container>\n            );\n\n        } else {\n            return (\n                <Container>\n                    <JKTTStaplesNav \n                    handleDeleteSelected={ this.handleDeleteSelected }\n                    handleAddItemUI={ this.props.handleAddItemUI }\n                    />\n                </Container>\n            );\n        }\n    }\n}\n\nexport default JKTTStaplesTable;","import React from 'react';\nimport DashboardNav from '../components/dashboard/dashboardNav';\nimport OneTimeItemsTable from './oneTimeItemsTable';\nimport HouseStaplesTable from './houseStaplesTable';\nimport JKTTStaplesTable from './jkttStaplesTable';\nimport { Switch, Route } from 'react-router-dom';\n\nclass DashboardContainer extends React.Component {\n    render() {\n        const data = this.props.data\n        return(\n            <React.Fragment>\n                <DashboardNav />\n                <Switch>\n                    <Route path='/dashboard/house-staples'>\n                        <HouseStaplesTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI }\n                        />\n                    </Route>\n                    <Route path='/dashboard/jktt-staples'>\n                        <JKTTStaplesTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI } \n                        />\n                    </Route>\n                    <Route path='/dashboard/one-time-items'>\n                        <OneTimeItemsTable \n                        data={ data } \n                        handleUpdateUI={ this.props.handleUpdateUI }\n                        handleAddItemUI={ this.props.handleAddItemUI }\n                        handleDeleteUI={ this.props.handleDeleteUI } \n                        />\n                    </Route>\n                </Switch>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DashboardContainer;","import React from 'react';\nimport HeroBanner from '../components/heroBanner';\nimport MobileContainer from './mobileContainer';\nimport DashboardContainer from './dashboardContainer';\nimport { Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from 'axios';\nimport _ from 'lodash';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      staples: [], \n      oneTimeItems: []\n    }\n\n    this.handleShoppingClickUI = this.handleShoppingClickUI.bind(this);\n    this.handleUpdateUI = this.handleUpdateUI.bind(this);\n    this.handleAddItemUI = this.handleAddItemUI.bind(this);\n    this.handleDeleteUI = this.handleDeleteUI.bind(this);\n    this.handleBulkStatusUpdateUI = this.handleBulkStatusUpdateUI.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n\n      //fetches data from the api on component mount\n      const staples = await axios.get(process.env.REACT_APP_API_STAPLES);\n      const oneTimeItems = await axios.get(process.env.REACT_APP_API_ONETIMEITEMS);\n      \n      //adds a checked parameter to each object\n      const checkedStaples = staples.data.map(object => {\n        return {...object, checked: false}\n      });\n      const checkedOneTimeItems = oneTimeItems.data.map(object => {\n        return {...object, checked: false}\n      });\n\n      this.setState({ staples: checkedStaples, oneTimeItems: checkedOneTimeItems });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /******************************************************************\n   * All of these functions update the ui state \n   */\n\n  handleShoppingClickUI(item) {\n    if(item.staple) {\n      let staples = this.state.staples;\n      const index = _.findIndex(staples, e => {\n          return e._id === item._id\n      });\n      staples[index].checked = !item.checked;\n      this.setState({ staples })\n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      const index = _.findIndex(oneTimeItems, e => {\n          return e._id === item._id\n      });\n      oneTimeItems[index].checked = !item.checked;\n      this.setState({ oneTimeItems })\n    }\n  }\n\n  handleUpdateUI(item) {\n\n    if(item.staple) {\n      let staples = this.state.staples;\n      const index = _.findIndex(staples, e => {\n        return e._id === item._id\n      });\n      staples[index] = item;\n      this.setState({staples: staples})\n\n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      const index = _.findIndex(oneTimeItems, e => {\n        return e._id === item._id\n      });\n      oneTimeItems[index] = item;\n      this.setState({oneTimeItems: oneTimeItems})\n    }\n  }\n\n  handleBulkStatusUpdateUI(staplesArray) {\n    let staples = this.state.staples;\n\n    staplesArray.forEach(staple => {\n      let index = _.findIndex(staples, e => {\n        return staple._id === e._id;\n      });\n      staples[index].inventoryStatus = staple.inventoryStatus;\n      staples[index].checked = false;\n\n    });\n\n    this.setState({staples: staples})\n  }\n  \n  handleAddItemUI(newItem) {\n\n    if(newItem.staple) {\n      const staples = [newItem, ...this.state.staples];\n      this.setState({staples: staples}); \n\n    } else {\n      const oneTimeItems = [newItem, ...this.state.oneTimeItems];\n      this.setState({oneTimeItems: oneTimeItems});\n    }\n  }\n\n  handleDeleteUI(deleted, staple) {\n    if(staple) {\n      let staples = this.state.staples;\n      let index;\n      deleted.forEach(id => {\n        index = staples.map((e) => { \n          return e._id; \n        }).indexOf(id);\n        staples.splice(index, 1);\n      });\n      this.setState({ staples: staples });\n      \n    } else {\n      let oneTimeItems = this.state.oneTimeItems;\n      let index;\n      deleted.forEach(id => {\n        index = oneTimeItems.map((e) => { \n          return e._id; \n        }).indexOf(id);\n        oneTimeItems.splice(index, 1);\n      });\n      this.setState({ oneTimeItems: oneTimeItems });\n    }\n    \n  }\n\n  \n  render() {\n    return (\n      <React.Fragment>\n        <HeroBanner />\n        <Switch>\n          <Route path=\"/dashboard\">\n            <DashboardContainer \n            data={ this.state } \n            handleAddItemUI={ this.handleAddItemUI } \n            handleUpdateUI={ this.handleUpdateUI }\n            handleDeleteUI={ this.handleDeleteUI }\n            />\n          </Route>\n          <Route path=\"/mobile\">\n            <MobileContainer \n            handleClickUI={ this.handleShoppingClickUI }\n            handleDeleteUI={ this.handleDeleteUI }\n            handleBulkStatusUpdateUI={ this.handleBulkStatusUpdateUI } \n            data={ this.state }\n            />\n          </Route>\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <Router>\n      <App />\n    </Router>,\n  //</React.StrictMode>\n document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}